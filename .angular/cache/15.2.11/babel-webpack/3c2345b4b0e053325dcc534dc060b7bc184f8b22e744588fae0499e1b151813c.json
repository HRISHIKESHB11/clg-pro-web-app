{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class MeetingsService {\n  constructor() {}\n  saveAndGenerateMeet(_newMeetDetail) {\n    localStorage.setItem('newMeet_' + _newMeetDetail.MeetCode, JSON.stringify(_newMeetDetail));\n  }\n  getMeetDetailsByMeetCode(_meetCode) {\n    let _meetDetail = localStorage.getItem('newMeet_' + _meetCode) || null;\n    return _meetDetail ? JSON.parse(_meetDetail) : null;\n  }\n  joinMeet(_userDetail, isMeetHost) {\n    localStorage.setItem('user_' + _userDetail.ConatctNo + '_' + _userDetail.MeetCode + '_NewRequest' + (isMeetHost ? '_MeetHoster' : ''), JSON.stringify(_userDetail));\n  }\n  getUserDetailByContactNo(_contactNo) {\n    let _userDetail = localStorage.getItem('user_' + _contactNo) || null;\n    return _userDetail ? JSON.parse(_userDetail) : null;\n  }\n  checkUserCount_InMeeting(_meetCode) {\n    debugger;\n    let _meetDetail = this.getMeetDetailsByMeetCode(_meetCode) || null;\n    let _meetTeamCount = 0;\n    if (_meetDetail) {\n      _meetTeamCount = Number(_meetDetail.MeetCandidateQuantity);\n      let _localStoArray = localStorage;\n      debugger;\n      if (localStorage.length) {\n        for (let i = 0; i < localStorage.length; i++) {\n          let _localItemKey = localStorage.key(i);\n          debugger;\n          if (_localItemKey) {\n            if (_localItemKey.toLowerCase().trim().includes(_meetCode)) {\n              _meetTeamCount += 1;\n            }\n          }\n        }\n      }\n      if (_meetTeamCount <= Number(_meetDetail.MeetCandidateQuantity)) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n  static {\n    this.ɵfac = function MeetingsService_Factory(t) {\n      return new (t || MeetingsService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: MeetingsService,\n      factory: MeetingsService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":";AAOA,OAAM,MAAOA,eAAe;EAE1BC,eAAgB;EAEhBC,mBAAmB,CAACC,cAA6B;IAC/CC,YAAY,CAACC,OAAO,CAAC,UAAU,GAAGF,cAAc,CAACG,QAAQ,EAAEC,IAAI,CAACC,SAAS,CAACL,cAAc,CAAC,CAAC;EAC5F;EAEAM,wBAAwB,CAACC,SAAiB;IACxC,IAAIC,WAAW,GAAGP,YAAY,CAACQ,OAAO,CAAC,UAAU,GAAGF,SAAS,CAAC,IAAI,IAAI;IACtE,OAAOC,WAAW,GAAGJ,IAAI,CAACM,KAAK,CAACF,WAAW,CAAC,GAAG,IAAI;EACrD;EAEAG,QAAQ,CAACC,WAAuB,EAAEC,UAAoB;IACpDZ,YAAY,CAACC,OAAO,CAAC,OAAO,GAAGU,WAAW,CAACE,SAAS,GAAG,GAAG,GAAGF,WAAW,CAACT,QAAQ,GAAG,aAAa,IAAIU,UAAU,GAAG,aAAa,GAAG,EAAE,CAAC,EAAET,IAAI,CAACC,SAAS,CAACO,WAAW,CAAC,CAAC;EACrK;EAEAG,wBAAwB,CAACC,UAAkB;IACzC,IAAIJ,WAAW,GAAGX,YAAY,CAACQ,OAAO,CAAC,OAAO,GAAGO,UAAU,CAAC,IAAI,IAAI;IACpE,OAAOJ,WAAW,GAAGR,IAAI,CAACM,KAAK,CAACE,WAAW,CAAC,GAAG,IAAI;EACrD;EAEAK,wBAAwB,CAACV,SAAiB;IACxC;IACA,IAAIC,WAAW,GAAkB,IAAI,CAACF,wBAAwB,CAACC,SAAS,CAAC,IAAI,IAAI;IACjF,IAAIW,cAAc,GAAG,CAAC;IACtB,IAAIV,WAAW,EAAE;MACfU,cAAc,GAAGC,MAAM,CAACX,WAAW,CAACY,qBAAqB,CAAC;MAC1D,IAAIC,cAAc,GAAGpB,YAAY;MACjC;MACA,IAAIA,YAAY,CAACqB,MAAM,EAAE;QACvB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGtB,YAAY,CAACqB,MAAM,EAAEC,CAAC,EAAE,EAAE;UAC5C,IAAIC,aAAa,GAAGvB,YAAY,CAACwB,GAAG,CAACF,CAAC,CAAC;UACvC;UACA,IAAIC,aAAa,EAAE;YACjB,IAAIA,aAAa,CAACE,WAAW,EAAE,CAACC,IAAI,EAAE,CAACC,QAAQ,CAACrB,SAAS,CAAC,EAAE;cAC1DW,cAAc,IAAI,CAAC;;;;;MAK3B,IAAIA,cAAc,IAAIC,MAAM,CAACX,WAAW,CAACY,qBAAqB,CAAC,EAAE;QAC/D,OAAO,IAAI;OACZ,MAAM;QACL,OAAO,KAAK;;KAEf,MAAM;MACL,OAAO,KAAK;;EAGhB;;;uBAlDWvB,eAAe;IAAA;EAAA;;;aAAfA,eAAe;MAAAgC,SAAfhC,eAAe;MAAAiC,YAFd;IAAM;EAAA","names":["MeetingsService","constructor","saveAndGenerateMeet","_newMeetDetail","localStorage","setItem","MeetCode","JSON","stringify","getMeetDetailsByMeetCode","_meetCode","_meetDetail","getItem","parse","joinMeet","_userDetail","isMeetHost","ConatctNo","getUserDetailByContactNo","_contactNo","checkUserCount_InMeeting","_meetTeamCount","Number","MeetCandidateQuantity","_localStoArray","length","i","_localItemKey","key","toLowerCase","trim","includes","factory","providedIn"],"sourceRoot":"","sources":["D:\\Porjects Git Repo\\clg-pro-web-app\\src\\app\\@core\\services\\meetings.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { NewMeetDetail } from 'src/app/shared/modals/newMeetDetail';\r\nimport { UserDetail } from 'src/app/shared/modals/userDetail';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MeetingsService {\r\n\r\n  constructor() { }\r\n\r\n  saveAndGenerateMeet(_newMeetDetail: NewMeetDetail) {\r\n    localStorage.setItem('newMeet_' + _newMeetDetail.MeetCode, JSON.stringify(_newMeetDetail));\r\n  }\r\n\r\n  getMeetDetailsByMeetCode(_meetCode: string) {\r\n    let _meetDetail = localStorage.getItem('newMeet_' + _meetCode) || null;\r\n    return _meetDetail ? JSON.parse(_meetDetail) : null;\r\n  }\r\n\r\n  joinMeet(_userDetail: UserDetail, isMeetHost?: boolean) {\r\n    localStorage.setItem('user_' + _userDetail.ConatctNo + '_' + _userDetail.MeetCode + '_NewRequest' + (isMeetHost ? '_MeetHoster' : ''), JSON.stringify(_userDetail));\r\n  }\r\n\r\n  getUserDetailByContactNo(_contactNo: string) {\r\n    let _userDetail = localStorage.getItem('user_' + _contactNo) || null;\r\n    return _userDetail ? JSON.parse(_userDetail) : null;\r\n  }\r\n\r\n  checkUserCount_InMeeting(_meetCode: string) {\r\n    debugger\r\n    let _meetDetail: NewMeetDetail = this.getMeetDetailsByMeetCode(_meetCode) || null;\r\n    let _meetTeamCount = 0;\r\n    if (_meetDetail) {\r\n      _meetTeamCount = Number(_meetDetail.MeetCandidateQuantity);\r\n      let _localStoArray = localStorage;\r\n      debugger\r\n      if (localStorage.length) {\r\n        for (let i = 0; i < localStorage.length; i++) {\r\n          let _localItemKey = localStorage.key(i);\r\n          debugger\r\n          if (_localItemKey) {\r\n            if (_localItemKey.toLowerCase().trim().includes(_meetCode)) {\r\n              _meetTeamCount += 1;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (_meetTeamCount <= Number(_meetDetail.MeetCandidateQuantity)) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false\r\n    }\r\n\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}